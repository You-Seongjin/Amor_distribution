<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amor.ticketingSQL">

<select id="ticketingHistoryList" parameterType="Integer" resultType="com.amor.ticketing.model.JoinTicketingHistoryDTO">
  <![CDATA[
select a.playing_movie_idx as playingMovieidx,b.member_idx as memberidx,b.ticketing_idx as ticketingidx,
c.movie_idx as movieidx,c.movie_name as moviename,c.movie_poster as movieimg,b.ticketing_num as ticketnum,
b.theater_name as theatername,b.ticketing_seat as seatnum,b.ticketing_screeningtime as screeningdate,
b.ticketing_payment as payment,b.ticketing_price as price,b.ticketing_reservetime as reservetime
from playing_movie a,(select * from ticketing,theater
where ticketing.member_idx = #{useridx} and ticketing.ticketing_state = 'y' 
and ticketing.theater_idx = theater.theater_idx
order by ticketing_reservetime desc) b , movie c
where a.playing_movie_idx = b.playing_movie_idx and a.movie_idx = c.movie_idx
]]>
</select>

<select id="checkDate" parameterType="Integer" resultType="java.util.Date">
	select ticketing_screeningtime from ticketing
	where ticketing_idx = #{ticketingidx}
</select>

<select id="getPlayingMovie" parameterType="Integer" resultType="com.amor.playingMovie.model.PlayingMovieDTO">
	select 
	playing_movie_remain_seats,
	playing_movie_seat
	from playing_movie
	where playing_movie_idx = #{playingMovieidx}
</select>

<select id = "ticketingcancellList" parameterType="Integer" resultType="com.amor.ticketing.model.JoinTicketingHistoryDTO">
<![CDATA[
select c.movie_name as moviename,c.movie_poster as movieimg,b.ticketing_num as ticketnum,
b.theater_name as theatername,b.ticketing_seat as seatnum,b.ticketing_screeningtime as screeningdate,
b.ticketing_payment as payment,b.ticketing_price as price,b.ticketing_reservetime as reservetime 
from playing_movie a,(select * from ticketing,theater
where member_idx = #{useridx} and ticketing_state = 'n'
and ticketing.theater_idx = theater.theater_idx) b , movie c
where a.playing_movie_idx = b.playing_movie_idx and a.movie_idx = c.movie_idx
]]>
</select>

<update id="cancellationTicket" parameterType="Integer">
update ticketing
set ticketing_state = 'n'
where ticketing_idx = #{ticketidx}
</update>







	<select id="allMovie" resultType="Integer" parameterType="Map">
		<![CDATA[
		select nvl(sum(ticketing_price), 0) as a from ticketing 
		where ticketing_state <> 'n'
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') >= #{startd}
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') <= #{endd}
		]]>
	</select>

	<select id="dayMovie" resultType="com.amor.ticketing.model.TicketingDTO" parameterType="Map">
		<![CDATA[
		select nvl(ticketing_price, 0) as a, to_char(ticketing_reservetime, 'yyyy-mm-dd') as b
		from ticketing 
		where ticketing_state <> 'n' 
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') >= #{startd}
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') <= #{endd}
		order by ticketing_reservetime desc
		]]>
	</select>
	
	<select id="dayMovieTotal" resultType="Integer" parameterType="Map">
		<![CDATA[
		select nvl(sum(ticketing_price), 0) as a
		from ticketing 
		where ticketing_state <> 'n' 
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') >= #{startd}
		and to_char(ticketing_reservetime, 'yyyy-mm-dd') <= #{endd}
		]]>
	</select>
	
	<select id="monthMovie" resultType="com.amor.ticketing.model.TicketingDTO" parameterType="Map">
		<![CDATA[
		select nvl(sum(ticketing_price), 0) as a, to_char(ticketing_reservetime, 'yyyy-mm') as b from ticketing
		where ticketing_state <> 'n'
		and to_char(ticketing_reservetime, 'yyyy-mm') >= #{startd}
		and to_char(ticketing_reservetime, 'yyyy-mm') <= #{endd}
		group by to_char(ticketing_reservetime, 'yyyy-mm')
		order by b desc
		]]>
	</select>
	
	<select id="monthMovieTotal" resultType="Integer" parameterType="Map">
		<![CDATA[
		select nvl(sum(ticketing_price), 0) as a from ticketing
		where ticketing_state <> 'n'
		and to_char(ticketing_reservetime, 'yyyy-mm') >= #{startd}
		and to_char(ticketing_reservetime, 'yyyy-mm') <= #{endd}
		]]>
	</select>
	

	<select id="ticketingPlayingMovieList" resultType="com.amor.ticketing.model.TicketingSelectMovieDTO">
	<![CDATA[
		select movie_maxage, movie_name 
		from (select * from movie)a, (select movie_idx from playing_movie group by movie_idx) b 
		where a.movie_idx = b.movie_idx
	]]>
	</select>

	<select id="ticketingPayment" resultType="com.amor.ticketing.model.JoinTicketingHistoryDTO">
		select 
			a.movie_name,
			a.movie_poster,
			b.ticketing_reservetime,
			b.ticketing_screeningtime,
			d.theater_name,
			b.ticketing_personnel,
			b.ticketing_seat
		from
			movie a,
			ticketing b,
			playing_movie c,
			theater d
		where
			a.movie_idx = c.playing_movie_idx
			and b.theater_idx = d.theater_idx
			and b.playing_movie_idx = c.playing_movie_idx
	</select>
	
	<select id="ticketingPlayingMovieTimeList" parameterType="Map" resultType="com.amor.ticketing.model.TicketingSelectMovieDTO">
	<![CDATA[
		select a.movie_idx as "movie_idx", movie_name as "movie_name", playing_movie_idx, 
		b.theater_idx as "theater_idx", c.theater_name as "theater_name" ,b.playing_movie_date as "playing_movie_date", 
		b.playing_movie_start as "playing_movie_start", b.playing_movie_remain_seats as "playing_movie_remain_seats", 
		c.theater_totalseat as "theater_totalseat" 
		from (select movie_idx, movie_name from movie where movie_name = #{movie_name} )a, 
			playing_movie b, (select theater_idx, theater_name, theater_totalseat from theater) c 
		where a.movie_idx = b.movie_idx and c.theater_idx = b.theater_idx and b.playing_movie_date = #{sumdate} and  b.playing_movie_start > sysdate
		order by playing_movie_start
	]]>
	</select>
	
	<select id="timetoMovieLists" parameterType="Date" resultType="com.amor.ticketing.model.TicketingSelectMovieDTO">
	<![CDATA[
		select a.movie_idx as "movie_idx", movie_name as "movie_name", playing_movie_idx, 
		b.theater_idx as "theater_idx", c.theater_name as "theater_name" ,b.playing_movie_date as "playing_movie_date", 
		b.playing_movie_start as "playing_movie_start", b.playing_movie_remain_seats as "playing_movie_remain_seats", 
		c.theater_totalseat as "theater_totalseat"
		from movie a, playing_movie b, (select theater_idx, theater_name, theater_totalseat from theater) c 
		where a.movie_idx = b.movie_idx and c.theater_idx = b.theater_idx and b.playing_movie_date = #{sumdate} and  b.playing_movie_start > sysdate
		order by movie_name asc, playing_movie_start asc
	
	]]>
	</select>
	
	<select id="ticketingList" parameterType="Map" resultType="com.amor.ticketing.model.TicketingListDTO">
	<![CDATA[
	select * from 
	(select rownum as rnum, g.* from (select ticketing_idx, b.member_idx as "member_idx", e.playing_movie_idx as "playing_movie_idx", f.theater_idx as "theater_idx" , a.member_id as "member_id", a.member_name as "member_name", a.member_tel1 as "member_tel1", a.member_tel2 as "member_tel2", e.movie_name as "movie_name", f.theater_name ,ticketing_seat, e.playing_movie_date as "playing_movie_date", e.playing_movie_start as "playing_movie_start", ticketing_reservetime, ticketing_price, ticketing_personnel, ticketing_payment, ticketing_state  
	from (select * from member) a, ticketing b, 
    (select playing_movie_idx, playing_movie_date, playing_movie_start, d.movie_idx as "movie_idx", movie_name from (select movie_idx, movie_name from movie) c, playing_movie d where c.movie_idx = d.movie_idx) e,
    (select theater_idx ,theater_name from theater) f
	where a.member_idx = b.member_idx and b.playing_movie_idx = e.playing_movie_idx and b.theater_idx = f.theater_idx
	order by ticketing_idx desc) g)h
	where rnum >= #{start} and rnum <= #{end}
	]]>
	</select>
	
	<select id="ticketingListSearch" parameterType="Map" resultType="com.amor.ticketing.model.TicketingListDTO">
	<![CDATA[
	select * from 
	(select rownum as rnum, g.* from (select ticketing_idx, b.member_idx as "member_idx", e.playing_movie_idx as "playing_movie_idx", f.theater_idx as "theater_idx" , a.member_id as "member_id", a.member_name as "member_name", a.member_tel1 as "member_tel1", a.member_tel2 as "member_tel2", e.movie_name as "movie_name", f.theater_name ,ticketing_seat, e.playing_movie_date as "playing_movie_date", e.playing_movie_start as "playing_movie_start", ticketing_reservetime, ticketing_price, ticketing_personnel, ticketing_payment, ticketing_state  
	from (select * from member) a, ticketing b, 
    (select playing_movie_idx, playing_movie_date, playing_movie_start, d.movie_idx as "movie_idx", movie_name from (select movie_idx, movie_name from movie) c, playing_movie d where c.movie_idx = d.movie_idx) e,
    (select theater_idx ,theater_name from theater) f
	where a.member_idx = b.member_idx and b.playing_movie_idx = e.playing_movie_idx and b.theater_idx = f.theater_idx and and a.member_id like '%${search}%'
	order by ticketing_idx desc) g)h
	where rnum >= #{start} and rnum <= #{end}
	]]>
	</select>
	
	
	<select id="ticketingListtotalCnt" resultType="Integer" >
	<![CDATA[
		select count(*)
		from (select * from member) a, ticketing b, 
	    (select playing_movie_idx, playing_movie_date, playing_movie_start, d.movie_idx as "movie_idx", movie_name from (select movie_idx, movie_name from movie) c, playing_movie d where c.movie_idx = d.movie_idx) e,
	    (select theater_idx ,theater_name from theater) f
		where a.member_idx = b.member_idx and b.playing_movie_idx = e.playing_movie_idx and b.theater_idx = f.theater_idx
		order by ticketing_idx desc
	]]>
	</select>
	
	<select id="ticketingListSearchtotalCnt" resultType="Integer" parameterType="String">
	<![CDATA[
		select count(*)
		from (select * from member) a, ticketing b, 
	    (select playing_movie_idx, playing_movie_date, playing_movie_start, d.movie_idx as "movie_idx", movie_name from (select movie_idx, movie_name from movie) c, playing_movie d where c.movie_idx = d.movie_idx) e,
	    (select theater_idx ,theater_name from theater) f
		where a.member_idx = b.member_idx and b.playing_movie_idx = e.playing_movie_idx and b.theater_idx = f.theater_idx and a.member_id like '%${search}%'
		order by ticketing_idx desc
	]]>
	</select>
	
	<update id="ticketingstateChange" parameterType="com.amor.ticketing.model.TicketingListDTO">
		update ticketing set ticketing_state = #{ticketing_state} where ticketing_idx = #{ticketing_idx} 
	</update>
	
	
	
	<select id="ticketingPaying" parameterType="Map" resultType="com.amor.ticketing.model.TicketingPayingJoinDTO">
		select 
			a.movie_poster, a.movie_name, 
			to_char(b.playing_movie_start, 'yyyy-mm-dd hh24:mi:ss') as "playing_movie_start", 
			c.theater_name
		from 
			movie a, playing_movie b, theater c
		where 
			a.movie_idx = #{movie_idx}
		and b.playing_movie_idx = #{playing_movie_idx}
		and c.theater_idx = #{theater_idx}
	</select>

</mapper>